// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EncounterDisplay Component should render for order value of type collectionDate for status of Reported results 1`] = `
<Provider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(EncounterDisplay)
    orderUUID="some-order-uuid"
    type="collectionDate"
  >
    <EncounterDisplay
      dispatch={[Function]}
      order={
        Object {
          "labResult": Object {
            "encounter": Object {
              "encounterDatetime": "12/2/2018",
              "uuid": "some-encounter-uuid",
            },
            "resultStatus": "Reported",
          },
          "uuid": "some-order-uuid",
        }
      }
      orderUUID="some-order-uuid"
      type="collectionDate"
    >
      <div
        className="table_cell test-type"
      >
        02-Dec-2018
      </div>
    </EncounterDisplay>
  </Connect(EncounterDisplay)>
</Provider>
`;

exports[`EncounterDisplay Component should render for order value of type status 1`] = `
<Provider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(EncounterDisplay)
    orderUUID="some-order-uuid"
    type="collectionDate"
  >
    <EncounterDisplay
      dispatch={[Function]}
      order={
        Object {
          "labResult": Object {
            "encounter": Object {
              "encounterDatetime": "12/2/2018",
              "uuid": "some-encounter-uuid",
            },
            "resultStatus": "Reported",
          },
          "uuid": "some-order-uuid",
        }
      }
      orderUUID="some-order-uuid"
      type="collectionDate"
    >
      <div
        className="table_cell test-type"
      >
        02-Dec-2018
      </div>
    </EncounterDisplay>
  </Connect(EncounterDisplay)>
</Provider>
`;
