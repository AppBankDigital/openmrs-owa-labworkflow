// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LabOrdersList /> component renders correctly 1`] = `
<LabOrderListFilters
  clearNameEMRField={[MockFunction]}
  dateFromField={"2018-11-10T23:00:00.000Z"}
  dateToField={"2018-11-10T23:00:00.000Z"}
  handleFieldChange={[MockFunction]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  labTests={
    Array [
      "Hémogramme automatisé",
    ]
  }
  nameField=""
  testTypeField=""
>
  <div
    className="order-list-filters"
  >
    <span
      className="top-filters"
    >
      <span
        className="date-picker-filter"
      >
        <span>
          <CustomDatePicker
            defaultDate="2018-11-11"
            field="dateFromField"
            formControlStyle={
              Object {
                "marginRight": "5px",
                "width": "110px",
              }
            }
            handleDateChange={[Function]}
            label={
              <FormattedMessage
                defaultMessage="From: "
                description="Label for the first date search input"
                id="app.labOrdersListFilters.searchDateFromLabel"
                values={Object {}}
              />
            }
            labelClassName="line"
          >
            <div>
              <DatePicker
                allowSameDay={false}
                customInput={<DateDisplayComponent />}
                dateFormat="dd MMM YYYY"
                dateFormatCalendar="LLLL yyyy"
                disabled={false}
                disabledKeyboardNavigation={false}
                dropdownMode="scroll"
                excludeDates={
                  Array [
                    false,
                  ]
                }
                monthsShown={1}
                nextMonthButtonLabel="Next month"
                onBlur={[Function]}
                onChange={[Function]}
                onClickOutside={[Function]}
                onFocus={[Function]}
                onInputClick={[Function]}
                onInputError={[Function]}
                onKeyDown={[Function]}
                onMonthChange={[Function]}
                onSelect={[Function]}
                onYearChange={[Function]}
                preventOpenOnFocus={false}
                previousMonthButtonLabel="Previous Month"
                readOnly={false}
                renderDayContents={[Function]}
                selected="2018-11-11"
                shouldCloseOnSelect={true}
                showTimeSelect={false}
                timeCaption="Time"
                timeIntervals={30}
                withPortal={false}
              >
                <PopperComponent
                  hidePopper={true}
                  popperComponent={null}
                  popperModifiers={
                    Object {
                      "preventOverflow": Object {
                        "boundariesElement": "viewport",
                        "enabled": true,
                        "escapeWithReference": true,
                      },
                    }
                  }
                  popperPlacement="bottom-start"
                  popperProps={Object {}}
                  targetComponent={
                    <div
                      className="react-datepicker__input-container"
                    >
                      <DateDisplayComponent
                        className=""
                        disabled={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        readOnly={false}
                        value="11 Nov 2018"
                      />
                    </div>
                  }
                >
                  <Manager>
                    <Reference>
                      <InnerReference
                        getReferenceRef={[Function]}
                      >
                        <div
                          className="react-datepicker-wrapper"
                        >
                          <div
                            className="react-datepicker__input-container"
                          >
                            <DateDisplayComponent
                              className=""
                              disabled={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              readOnly={false}
                              value="11 Nov 2018"
                            >
                              <span>
                                <span
                                  style={
                                    Object {
                                      "display": "flex",
                                      "justifyContent": "space-around",
                                    }
                                  }
                                >
                                  <span
                                    className="line"
                                  >
                                    <FormattedMessage
                                      defaultMessage="From: "
                                      description="Label for the first date search input"
                                      id="app.labOrdersListFilters.searchDateFromLabel"
                                      values={Object {}}
                                    >
                                      <span>
                                        From: 
                                      </span>
                                    </FormattedMessage>
                                  </span>
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    onClick={[Function]}
                                    placeholder=""
                                    style={
                                      Object {
                                        "marginRight": "5px",
                                        "width": "110px",
                                      }
                                    }
                                    type="text"
                                    value="11 Nov 2018"
                                  >
                                    <input
                                      className="form-control"
                                      onClick={[Function]}
                                      placeholder=""
                                      style={
                                        Object {
                                          "marginRight": "5px",
                                          "width": "110px",
                                        }
                                      }
                                      type="text"
                                      value="11 Nov 2018"
                                    />
                                  </FormControl>
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon="calendar-alt"
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    onClick={[Function]}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size="2x"
                                    spin={false}
                                    symbol={false}
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-calendar-alt fa-w-14 fa-2x "
                                      data-icon="calendar-alt"
                                      data-prefix="fas"
                                      onClick={[Function]}
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 448 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm116 204c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </span>
                            </DateDisplayComponent>
                          </div>
                        </div>
                      </InnerReference>
                    </Reference>
                  </Manager>
                </PopperComponent>
              </DatePicker>
            </div>
          </CustomDatePicker>
        </span>
        <span>
          <CustomDatePicker
            defaultDate="2018-11-11"
            field="dateToField"
            formControlStyle={
              Object {
                "marginRight": "5px",
                "width": "110px",
              }
            }
            handleDateChange={[Function]}
            label={
              <FormattedMessage
                defaultMessage="To: "
                description="Label for the second date search input"
                id="app.labOrdersListFilters.searchDateToLabel"
                values={Object {}}
              />
            }
            labelClassName="line"
          >
            <div>
              <DatePicker
                allowSameDay={false}
                customInput={<DateDisplayComponent />}
                dateFormat="dd MMM YYYY"
                dateFormatCalendar="LLLL yyyy"
                disabled={false}
                disabledKeyboardNavigation={false}
                dropdownMode="scroll"
                excludeDates={
                  Array [
                    false,
                  ]
                }
                monthsShown={1}
                nextMonthButtonLabel="Next month"
                onBlur={[Function]}
                onChange={[Function]}
                onClickOutside={[Function]}
                onFocus={[Function]}
                onInputClick={[Function]}
                onInputError={[Function]}
                onKeyDown={[Function]}
                onMonthChange={[Function]}
                onSelect={[Function]}
                onYearChange={[Function]}
                preventOpenOnFocus={false}
                previousMonthButtonLabel="Previous Month"
                readOnly={false}
                renderDayContents={[Function]}
                selected="2018-11-11"
                shouldCloseOnSelect={true}
                showTimeSelect={false}
                timeCaption="Time"
                timeIntervals={30}
                withPortal={false}
              >
                <PopperComponent
                  hidePopper={true}
                  popperComponent={null}
                  popperModifiers={
                    Object {
                      "preventOverflow": Object {
                        "boundariesElement": "viewport",
                        "enabled": true,
                        "escapeWithReference": true,
                      },
                    }
                  }
                  popperPlacement="bottom-start"
                  popperProps={Object {}}
                  targetComponent={
                    <div
                      className="react-datepicker__input-container"
                    >
                      <DateDisplayComponent
                        className=""
                        disabled={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        readOnly={false}
                        value="11 Nov 2018"
                      />
                    </div>
                  }
                >
                  <Manager>
                    <Reference>
                      <InnerReference
                        getReferenceRef={[Function]}
                      >
                        <div
                          className="react-datepicker-wrapper"
                        >
                          <div
                            className="react-datepicker__input-container"
                          >
                            <DateDisplayComponent
                              className=""
                              disabled={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              readOnly={false}
                              value="11 Nov 2018"
                            >
                              <span>
                                <span
                                  style={
                                    Object {
                                      "display": "flex",
                                      "justifyContent": "space-around",
                                    }
                                  }
                                >
                                  <span
                                    className="line"
                                  >
                                    <FormattedMessage
                                      defaultMessage="To: "
                                      description="Label for the second date search input"
                                      id="app.labOrdersListFilters.searchDateToLabel"
                                      values={Object {}}
                                    >
                                      <span>
                                        To: 
                                      </span>
                                    </FormattedMessage>
                                  </span>
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    onClick={[Function]}
                                    placeholder=""
                                    style={
                                      Object {
                                        "marginRight": "5px",
                                        "width": "110px",
                                      }
                                    }
                                    type="text"
                                    value="11 Nov 2018"
                                  >
                                    <input
                                      className="form-control"
                                      onClick={[Function]}
                                      placeholder=""
                                      style={
                                        Object {
                                          "marginRight": "5px",
                                          "width": "110px",
                                        }
                                      }
                                      type="text"
                                      value="11 Nov 2018"
                                    />
                                  </FormControl>
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon="calendar-alt"
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    onClick={[Function]}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size="2x"
                                    spin={false}
                                    symbol={false}
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-calendar-alt fa-w-14 fa-2x "
                                      data-icon="calendar-alt"
                                      data-prefix="fas"
                                      onClick={[Function]}
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 448 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm116 204c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </span>
                            </DateDisplayComponent>
                          </div>
                        </div>
                      </InnerReference>
                    </Reference>
                  </Manager>
                </PopperComponent>
              </DatePicker>
            </div>
          </CustomDatePicker>
        </span>
      </span>
    </span>
    <span
      className="bottom-filters"
    >
      <span
        className="form-filter-group one-third"
      >
        <FormattedMessage
          defaultMessage="Search for a sample"
          description="Label for text search input"
          id="app.labOrdersListFilters.textSearchTitle"
          values={Object {}}
        >
          <span>
            Search for a sample
          </span>
        </FormattedMessage>
        <span
          className="name-emrid-order-filter"
        >
          <i
            className="small icon-search"
          />
          <FormControl
            autoFocus={true}
            bsClass="form-control"
            componentClass="input"
            id="emr-name-search"
            onChange={[Function]}
            placeholder="search by ID or name, or scan sample"
            type="text"
            value=""
          >
            <input
              autoFocus={true}
              className="form-control"
              id="emr-name-search"
              onChange={[Function]}
              placeholder="search by ID or name, or scan sample"
              type="text"
              value=""
            />
          </FormControl>
          <i
            className="small scale icon-remove-sign"
            onClick={[Function]}
            role="toolbar"
          />
        </span>
      </span>
      <span
        className="status-dropdown"
      >
        <Dropdown
          className="form-filter-group"
          defaultValue="All"
          field="testStatusField"
          handleSelect={[Function]}
          id="test-status-dropdown"
          input={
            Object {
              "value": undefined,
            }
          }
          label={
            <FormattedMessage
              defaultMessage="Status"
              description="Label for the test status dropdown"
              id="app.labOrdersListFilters.statusDropdownLabel"
              values={Object {}}
            />
          }
          labelClassName=""
          list={
            Array [
              "Ordered",
              "Reported",
              "Taken",
            ]
          }
          placeholder="Select from the list"
        >
          <div>
            <span
              className="form-filter-group"
            >
              <span
                className=""
              >
                <FormattedMessage
                  defaultMessage="Status"
                  description="Label for the test status dropdown"
                  id="app.labOrdersListFilters.statusDropdownLabel"
                  values={Object {}}
                >
                  <span>
                    Status
                  </span>
                </FormattedMessage>
              </span>
              <select
                disabled={false}
                id="test-status-dropdown"
                onChange={[Function]}
                style={
                  Object {
                    "height": "45px",
                    "width": "100%",
                  }
                }
              >
                <option
                  key="0"
                  value=""
                >
                  Select from the list
                </option>
                <option
                  key="All"
                  value="All"
                >
                  All
                </option>
                <option
                  key="Ordered"
                  value="Ordered"
                >
                  Ordered
                </option>
                <option
                  key="Reported"
                  value="Reported"
                >
                  Reported
                </option>
                <option
                  key="Taken"
                  value="Taken"
                >
                  Taken
                </option>
              </select>
            </span>
          </div>
        </Dropdown>
      </span>
      <span
        className="type-dropdown"
      >
        <Dropdown
          className="form-filter-group"
          defaultValue="All"
          field="testTypeField"
          handleSelect={[Function]}
          id="test-type-dropdown"
          input={
            Object {
              "value": "",
            }
          }
          label={
            <FormattedMessage
              defaultMessage="Test Type"
              description="Label for the test type dropdown"
              id="app.labOrdersListFilters.searchDropdownLabel"
              values={Object {}}
            />
          }
          labelClassName=""
          list={
            Array [
              "Hémogramme automatisé",
            ]
          }
          placeholder="Select from the list"
        >
          <div>
            <span
              className="form-filter-group"
            >
              <span
                className=""
              >
                <FormattedMessage
                  defaultMessage="Test Type"
                  description="Label for the test type dropdown"
                  id="app.labOrdersListFilters.searchDropdownLabel"
                  values={Object {}}
                >
                  <span>
                    Test Type
                  </span>
                </FormattedMessage>
              </span>
              <select
                disabled={false}
                id="test-type-dropdown"
                onChange={[Function]}
                style={
                  Object {
                    "height": "45px",
                    "width": "100%",
                  }
                }
              >
                <option
                  key="0"
                  value=""
                >
                  Select from the list
                </option>
                <option
                  key="All"
                  value="All"
                >
                  All
                </option>
                <option
                  key="Hémogramme automatisé"
                  value="Hémogramme automatisé"
                >
                  Hémogramme automatisé
                </option>
              </select>
            </span>
          </div>
        </Dropdown>
      </span>
    </span>
  </div>
</LabOrderListFilters>
`;
